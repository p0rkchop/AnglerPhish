version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: anglerphish-app-dev
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://mongo:27017/anglerphish
      - JWT_SECRET=${JWT_SECRET}
      - IMAP_USER=${IMAP_USER}
      - IMAP_PASS=${IMAP_PASS}
      - IMAP_HOST=${IMAP_HOST:-imap.gmail.com}
      - IMAP_PORT=${IMAP_PORT:-993}
      - IMAP_SECURE=${IMAP_SECURE:-true}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./uploads:/usr/src/app/uploads
      - ./logs:/usr/src/app/logs
      # For development, you might want to mount source code for hot reload
      # - ./server:/usr/src/app/server
    networks:
      - anglerphish-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/config/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:5-focal
    container_name: anglerphish-mongo-dev
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data_dev:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=anglerphish
      # No auth for development to make it easier
    networks:
      - anglerphish-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  anglerphish-network:
    driver: bridge

volumes:
  mongo_data_dev:
    driver: local