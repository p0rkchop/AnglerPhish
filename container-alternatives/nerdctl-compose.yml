version: '3.8'

# nerdctl compose file for AnglerPhish
# Usage: nerdctl compose -f nerdctl-compose.yml up -d

services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
      target: production
    container_name: anglerphish-app-nerdctl
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/anglerphish
      - JWT_SECRET=${JWT_SECRET}
      - IMAP_USER=${IMAP_USER}
      - IMAP_PASS=${IMAP_PASS}
      - IMAP_HOST=${IMAP_HOST:-imap.gmail.com}
      - IMAP_PORT=${IMAP_PORT:-993}
      - IMAP_SECURE=${IMAP_SECURE:-true}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - SMTP_HOST=${SMTP_HOST:-smtp.gmail.com}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURE=${SMTP_SECURE:-false}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    depends_on:
      - mongo
    volumes:
      - uploads_data:/usr/src/app/uploads
      - logs_data:/usr/src/app/logs
    networks:
      - anglerphish-network

  mongo:
    image: mongo:5-focal
    container_name: anglerphish-mongo-nerdctl
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
      - ../docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_DATABASE=anglerphish
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password123}
    networks:
      - anglerphish-network
    command: ["mongod", "--auth"]

networks:
  anglerphish-network:
    driver: bridge

volumes:
  mongo_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local